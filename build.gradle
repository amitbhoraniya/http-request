apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.finalhints"
archivesBaseName = "http-request"
version = '1.0'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
	jcenter()
}

dependencies {
	testCompile 'org.testng:testng:6.9.10'
	testCompile group: 'com.google.code.gson', name: 'gson', version: '2.7'
}

jar {
	metaInf {
        from '.' include 'LICENSE'
    }
    manifest {
    	attributes(
    		'Implementation-Title': project.name,
			'Implementation-Version': project.version,
			'Built-By': System.getProperty('user.name'),
			'Built-JDK': System.getProperty('java.version'),
			'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    	)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    metaInf {
        from '.' include 'LICENSE'
    }
    manifest {
    	attributes(
    		'Implementation-Title': project.name,
			'Implementation-Version': project.version,
			'Built-By': System.getProperty('user.name'),
			'Built-JDK': System.getProperty('java.version'),
			'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    	)
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    metaInf {
        from '.' include 'LICENSE'
    }
    manifest {
    	attributes(
    		'Implementation-Title': project.name,
			'Implementation-Version': project.version,
			'Built-By': System.getProperty('user.name'),
			'Built-JDK': System.getProperty('java.version'),
			'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    	)
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: hasProperty('ossrhUsername')?ossrhUsername:'', password: hasProperty('ossrhPassword')?ossrhPassword:'')
      }

      pom.project {
        name 'Http-Request'
        packaging 'jar' 
        description 'Simple Http Library to make request and access the response'
        url 'https://github.com/amitbhoraniya/http-request'

        scm {
        	connection 'scm:git:https://github.com/amitbhoraniya/http-request.git'
        	developerConnection 'scm:git:amitbhoraniya@github.com:your/http-request.git'
        	url 'https://github.com/amitbhoraniya/http-request.git'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'amitbhoraniya'
            name 'Amit Bhoraniya'
            email 'amitbhoraniya007@gmail.com'
          }
        }
      }
    }
  }
}

test{
	useTestNG()
	{
		testLogging.showStandardStreams = true
	}
}
